{"version":3,"sources":["webpack:///webpack/bootstrap db1d903dfa9822ba2466","webpack:///./server/server.ts","webpack:///external \"rxjs\"","webpack:///external \"md5\"","webpack:///external \"uuid\"","webpack:///external \"nodemailer\"","webpack:///./server/api/api.service.ts","webpack:///./server/api/auth.api.ts","webpack:///./server/api/request.handler.ts","webpack:///./server/api/user.api.ts","webpack:///./server/bootstrap.ts","webpack:///./server/common/crud.service.ts","webpack:///./server/common/email.service.ts","webpack:///./server/common/global.service.ts","webpack:///./server/common/jwt.service.ts","webpack:///./server/db/db.client.ts","webpack:///external \"body-parser\"","webpack:///external \"cookie-parser\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"express-jwt\"","webpack:///external \"fs\"","webpack:///external \"http\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"mongodb\"","webpack:///external \"path\""],"names":[],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/Users/test/Projects/startUp/server\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap db1d903dfa9822ba2466","import { Server } from './bootstrap';\nimport {GlobalService} from './common/global.service';\n\nvar $server = new Server(new GlobalService());\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./server/server.ts","module.exports = require(\"rxjs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"md5\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"md5\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"uuid\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"uuid\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"nodemailer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"nodemailer\"\n// module id = 4\n// module chunks = 0","import { UserAPI } from './user.api';\nimport { CRUDService } from './../common/crud.service';\nimport { APIResponse } from './api.service';\nimport { Observable } from 'rxjs';\nimport { RequestHandler } from './request.handler';\nimport { AuthAPI } from './auth.api';\nimport { JWTService } from './../common/jwt.service';\nimport { DBClient } from './../db/db.client';\nimport { GlobalService } from '../common/global.service';\nimport * as path from 'path';\nimport * as express from 'express';\nimport * as bodyParser from 'body-parser';\nimport { EmailService } from './../common/email.service';\nconst md5 = require('md5');\n\nexport interface APIResponse {\n    status: boolean,\n    typeResponse?: string,\n    data?: any,\n    error?: string,\n    root?: any\n}\n\ninterface apiEndpoint {\n    address: string,\n    type: 'post' | 'get' | 'put' | 'delete',\n    class: any,\n    method: string\n}\n\nexport class APIHandler {\n    private requestHandler: RequestHandler;\n    private apiEndpoints: [apiEndpoint];\n    private auth: AuthAPI;\n    private user: UserAPI;\n    private md: any;\n    private clientUrl: string = 'http://localhost:4200/#';\n    constructor(\n        private globalService: GlobalService,\n        private db: DBClient,\n        private JWT: JWTService,\n        private CRUD: CRUDService,\n        private ES: EmailService\n    ) {\n        this.auth = new AuthAPI(JWT, CRUD, ES);\n        this.user = new UserAPI(JWT, CRUD, ES);\n        this.requestHandler = new RequestHandler();\n        this.apiEndpoints = [\n          {\n              address: '/v1/auth/register',\n              type: 'post',\n              class: this.auth,\n              method: 'register'\n          },\n          {\n              address: '/v1/auth/verify',\n              type: 'get',\n              class: this.auth,\n              method: 'verifyAccount'\n          },\n          {\n              address: '/v1/auth/login',\n              type: 'post',\n              class: this.auth,\n              method: 'login'\n          },\n          {\n              address: '/v1/auth/check-email',\n              type: 'post',\n              class: this.auth,\n              method: 'checkEmail'\n          },\n          {\n              address: '/v1/auth/reset-password',\n              type: 'post',\n              class: this.user,\n              method: 'initiateResetPassword'\n          },\n          {\n              address: '/v1/auth/set-password',\n              type: 'post',\n              class: this.user,\n              method: 'setPassword'\n          },\n          {\n              address: '/privacypolicy',\n              type: 'get',\n              class: this.user,\n              method: 'privacyPolicy'\n          }\n        ];\n    }\n    routes() {\n\n        this.apiEndpoints.forEach(endpoint => {\n            this.initRoute(endpoint);\n        });\n\n        this.globalService.app.get('**', (req, res, next) => {\n          console.log('got request')\n        });\n    }\n\n    initRoute(endpoint: apiEndpoint) {\n        this.globalService.app[endpoint.type](endpoint.address, (req, res, next) => {\n            res.setHeader('Access-Control-Allow-Origin', '*');\n            console.log(endpoint.address + ' ' + endpoint.type.toUpperCase() + ' Request: ', req.body);\n            if (!endpoint.class || !endpoint.class[endpoint.method]) this.returnError(res, 'Endpoint not found.', endpoint.address, endpoint.type, 404);\n            this.requestHandler.handle(req).subscribe(handledReq => {\n                let someone = req.user;\n                if (someone && someone['user_id']) {\n                    console.log('got user', someone);\n                    endpoint.class[endpoint.method](handledReq, someone['user_id']).subscribe((resAPI: APIResponse) => {\n                        console.log(endpoint.address + ' ' + endpoint.type.toUpperCase() + ' Response 1: ', resAPI);\n\n                        switch( resAPI.typeResponse ) {\n                          case 'redirect':\n                          console.log('redirect')\n                            res.redirect(resAPI.data);\n                            break;\n                          case 'html':\n                            console.log('html')\n                            res.sendFile(\n                                resAPI.data,\n                                { root: __dirname + '/../../public/mail' }\n                            );\n                            break;\n                          default:\n                            console.log('default')\n                            res.json(resAPI);\n                            break;\n                        }\n\n                    }, err => this.returnError(res, err, endpoint.address, endpoint.type))\n                } else {\n                    console.log('no user');\n                    endpoint.class[endpoint.method](handledReq).subscribe((resAPI: APIResponse) => {\n                        console.log(endpoint.address + ' ' + endpoint.type.toUpperCase() + ' Response 2: ', resAPI);\n                        switch( resAPI.typeResponse ) {\n                          case 'redirect':\n                            res.redirect(resAPI.data);\n                            break;\n                          case 'html':\n                            res.sendFile(\n                                resAPI.data,\n                                resAPI.root\n                            );\n                            break;\n                          default:\n                            res.json(resAPI);\n                            break;\n                        }\n                    }, err => {\n                      console.log(err, 'err');\n                      this.returnError(res, err, endpoint.address, endpoint.type, 401)}\n                    )\n                }\n            }, err => this.returnError(res, err));\n        })\n    }\n\n    returnError(res, message: string, address: string = 'Undefined', type: string = 'Undefined', status: number = 400) {\n        console.log(address + ' ' + type.toUpperCase() + ' Error: ', message);\n        let error: APIResponse = {\n            status: false,\n            error: message\n        }\n        res.status(status).json(error);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./server/api/api.service.ts","import { CRUDService } from './../common/crud.service';\nimport { APIResponse } from './api.service';\nimport { Observable } from 'rxjs';\nimport { JWTService } from './../common/jwt.service';\nimport { EmailService } from './../common/email.service';\nimport * as uuid from 'uuid';\n\nvar md5 = require('md5');\nexport class AuthAPI {\n\n    private socialSecret: string = 'e4901652-9ef1-4e79-abd1-cde058ba51bf';\n\n    constructor(\n        private JWT: JWTService,\n        private CRUD: CRUDService,\n        private ES: EmailService\n    ){}\n\n    login(data) {\n        let response: APIResponse;\n        return new Observable(observer => {\n            data.password = md5(data.password);\n            this.CRUD.read('users', data).subscribe((res: any) => {\n                if (res.length === 1) {\n                    response = {\n                      status: true,\n                      data: this.JWT.createToken({ user_id: res[0]['id'] })\n                    };\n\n                    if (!res[0]['verified']) {\n                      data.verified = true;\n                      this.CRUD.update('users', {email: data.email}, data).subscribe();\n                    }\n                    observer.next(response);\n                } else {\n                    observer.error('WRONG_LOGIN')\n                }\n            }, err => {\n                observer.error(err);\n            })\n\n        })\n    }\n\n    adminLogin(data) {\n        let response: APIResponse;\n        return new Observable(observer => {\n\n            if ( !data.password || !data.email ) return observer.error('INVALID_USER_DATA');\n\n            data.password = md5(data.password);\n            this.CRUD.read('admins', data).subscribe((res: any) => {\n                if (res.length === 1) {\n                    response = {\n                      status: true,\n                      data: this.JWT.createToken({ admin_id: res[0]['id'] })\n                    };\n\n                    if (!res[0]['verified']) {\n                      data.verified = true;\n                      this.CRUD.update('admins', {email: data.email}, data).subscribe();\n                    }\n                    observer.next(response);\n                } else {\n                    observer.error('WRONG_ADMIN_LOGIN')\n                }\n            }, err => {\n                observer.error(err);\n            })\n        })\n    }\n\n    checkEmail(data) {\n      return new Observable(observer => {\n\n        if ( !data.email ) return observer.error('INVALID_USER_DATA');\n\n        this.CRUD.read('users', { email: data.email }).subscribe((res: any) => {\n          if (res.length > 0) {\n            observer.next({ isUsed: true })\n          } else {\n            observer.next({ isUsed: false });\n          }\n        });\n      });\n    }\n\n    register(data) {\n      let response: APIResponse;\n      return new Observable(observer => {\n\n        if ( !data.password || !data.email ) return observer.error('INVALID_USER_DATA');\n\n        data.password = md5(data.password);\n        this.CRUD.read('users', { email: data.email }).subscribe((res: any) => {\n          if (!res.length) {\n            data.verified = false;\n            data.hash = uuid.v4();\n            this.CRUD.createOne('users', data).subscribe((res: any) => {\n              // send verifivation email\n               this.ES.sendVerificationLink(data.email, data.hash).subscribe( res => {\n                 response = {\n                   status: true,\n                 }\n                 observer.next(response);\n               }, err => observer.error(err));\n              // automatic login after signup disabled. user should verify his email to be able to log in\n            }, err => observer.error(err));\n          } else {\n            observer.error('EMAIL_ALREADY_EXISTS')\n          }\n        }, err => observer.error(err))\n      })\n    }\n\n    verifyAccount(data) {\n      return new Observable( observer => {\n        this.CRUD.read(\n          'users',\n          { hash: data.hash }\n        ).subscribe(users => {\n          const user = users[0];\n\n          if (!user) return observer.next({typeResponse: 'redirect', data: `http://localhost:1337`});\n\n          this.JWT.createToken({ user_id: user['id'] });\n          this.CRUD.update(\n            'users',\n            { hash: data.hash },\n            { hash: null, verified: true }\n          ).subscribe((res: any) => {\n            if (res.nModified !== 1) return observer.error('this hash is broken');\n            observer.next({typeResponse: 'redirect', data: `http://localhost:1337`});\n          });\n        });\n      });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./server/api/auth.api.ts","import { Observable } from 'rxjs';\nexport class RequestHandler {\n    constructor() {}\n    handle(req) {\n        return new Observable(observer => {\n            let hasQuery: boolean = false;\n            if (Object.keys(req.query).length) hasQuery = true;\n            // console.log('Object.keys(req.query)', Object.keys(req.query), req.query, hasQuery);\n            let hasBody: boolean = false;\n            if (Object.keys(req.body).length) hasBody = true;\n            // console.log('Object.keys(req.body)', Object.keys(req.body), req.body, hasBody); \n\n            if (hasBody && !hasQuery)\n                observer.next(req.body);\n            else if (hasQuery && !hasBody)\n                observer.next(req.query);\n            else if (hasQuery && hasBody)\n                observer.next(Object.assign(req.query, req.body));\n            else {\n                observer.next({});\n            }\n        })\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./server/api/request.handler.ts","import { CRUDService } from './../common/crud.service';\nimport { APIResponse } from './api.service';\nimport { Observable } from 'rxjs';\nimport { JWTService } from './../common/jwt.service';\nimport { EmailService } from './../common/email.service';\nimport * as uuid from 'uuid';\nvar md5 = require('md5');\n\nexport class UserAPI {\n\n  constructor(\n    private JWT: JWTService,\n    private CRUD: CRUDService,\n    private ES: EmailService\n  ) {\n  }\n\n  //***********************************//\n  //get\n\n  getUser(data, user_id) {\n    return new Observable(observer => {\n      this.CRUD.read('users', { id: user_id }).subscribe(users => {\n        const user = users[0];\n\n        if (!user) return observer.error('User not found.');\n\n        delete user.password;\n        delete user._id;\n        delete user.verified;\n        delete user.passwordResetHash;\n        delete user.hash;\n        observer.next(user);\n      }, err => observer.error(err));\n    });\n  }\n\n  //***********************************//\n  // post\n\n\n  //***********************************//\n  // put\n\n initiateResetPassword(data) {\n   return new Observable(observer => {\n     const hash = uuid.v4();\n     this.CRUD.update(\n       'users',\n       { email: data.email },\n       { passwordResetHash:  hash}\n     ).subscribe((res: any) => {\n       if (res.nModified == 1) {\n         this.ES.sendPasswordRecoveryLink(data.email, hash).subscribe( res => {\n\n           if (res === true) {\n             return observer.next({ status: 'success' });\n           }\n           return observer.error(\"Unexpected error!\")\n         });\n       } else observer.error('User not found!');\n     }, err => observer.error(err));\n   });\n }\n\n setPassword(data) {\n   return new Observable(observer => {\n\n    if ( !data.password || !data.email || !data.passwordResetHash) return observer.error('INVALID_USER_DATA');\n\n     this.CRUD.read(\n       'users',\n       { email: data.email, passwordResetHash:  data.passwordResetHash }\n     ).subscribe((user: any) => {\n       if (user.length > 0) {\n         this.CRUD.update(\n           'users',\n           { email: data.email, passwordResetHash:  data.passwordResetHash },\n           { password: md5(data.password) }\n         ).subscribe((res: any) => {\n             return observer.next({ status: 'success' });\n        }, err => observer.error(err));\n\n       } else observer.error('User not found!');\n     }, err => observer.error(err));\n   });\n }\n\n privacyPolicy() {\n   return new Observable(observer => {\n      observer.next({ typeResponse: 'html', data: 'privacy.html',\n       root: { root: __dirname + '/../../public/mail' }});\n   })\n }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./server/api/user.api.ts","import { JWTService } from './common/jwt.service';\nimport { CRUDService } from './common/crud.service';\nimport { EmailService } from './common/email.service';\nimport * as path from 'path';\nimport * as express from 'express';\nimport * as bodyParser from 'body-parser';\nimport * as cookieParser from 'cookie-parser';\nimport { GlobalService } from './common/global.service';\nimport { APIHandler } from './api/api.service';\nimport * as http from 'http';\nimport { DBClient } from './db/db.client';\n\nexport class Server {\n    private app: any;\n    private API: APIHandler;\n    private CRUD: CRUDService;\n    private JWT: JWTService;\n    private ES: EmailService;\n    private $http;\n    private dbClient: DBClient;\n    private io: any;\n    private server: any;\n    private stagingServer: string;\n    private stagingClient: string;\n    //CORS doesn't want # in url\n    private stagingOnluForCORS: string;\n    constructor(\n        private globalService: GlobalService\n    ) {\n        global.isProduction = false;\n\n        if (global.isProduction) {\n          console.log = function(){}\n          this.stagingServer = '';\n          this.stagingClient = '';\n          this.stagingOnluForCORS = '';\n        } else {\n          this.stagingServer = '';\n          this.stagingClient = '';\n          this.stagingOnluForCORS = '';\n        }\n\n        this.dbClient = new DBClient(this.globalService);\n        this.dbClient.connect().subscribe(() => {\n            this.CRUD = new CRUDService(this.dbClient);\n            this.JWT = new JWTService();\n            this.ES = new EmailService(\n                this.CRUD,\n                this.stagingServer,\n                this.stagingClient\n            );\n            this.API = new APIHandler(\n                this.globalService,\n                this.dbClient,\n                this.JWT,\n                this.CRUD,\n                this.ES\n            );\n\n            this.bootstrap();\n        });\n    }\n    bootstrap() {\n        this.app = express();\n        this.$http = http['Server'](this.app);\n        this.app.use(bodyParser.json());\n        this.app.use(cookieParser());\n        this.app.use(express.static(path.join(__dirname, '../public')));\n\n        this.app.use((req, res, next) => {\n\n           res.header('Access-Control-Allow-Origin', this.stagingOnluForCORS);\n\n            res.header(\n                'Acces-Control-Allow-Methods',\n                'GET,PUT,POST,DELETE,OPTIONS'\n            );\n            res.header(\n                'Access-Control-Allow-Headers',\n                'Origin, X-Requested-With, Content-Type, Accept, Authorization'\n            );\n\n            next();\n        });\n\n        this.globalService.app = this.app;\n        this.JWT.init(this.app);\n        this.API.routes();\n\n        this.server = this.$http.listen(process.env.PORT || 1337, () => {\n            console.log('Server runs at ' + (process.env.PORT || 1337));\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./server/bootstrap.ts","import { DBClient } from './../db/db.client';\nimport { Observable } from 'rxjs';\nimport * as EventEmitter from 'events';\nimport * as uuid from 'uuid';\n\nexport class CRUDService {\n    constructor(\n        private dbClient: DBClient\n    ) {\n    }\n\n    read(collectionName: string, filter: Object = {}) {\n        const collection = this.dbClient.db.collection(collectionName);\n        console.log('read');\n        return new Observable<any[]>(observer => {\n            collection.find(filter).toArray((err, docs) => {\n                if (err) { observer.error('DATABASE_ERROR'); }\n                observer.next(docs);\n            });\n        })\n    }\n\n    create(collectionName: string, data: [Object]) {\n        return new Observable(observer => {\n            console.log('create: ', data);\n            new Promise((resolve, reject) => {\n                let length = data.length - 1;\n                data.forEach((item, index) => {\n                    if(!item['id'])\n                        item['id'] = uuid.v4();\n                    if (index === length) {\n                        resolve(data);\n                    }\n                })\n            }).then((data) => {\n                const collection = this.dbClient.db.collection(collectionName);\n\n                collection.insertMany(data, (err, docs) => {\n                    if (err) observer.error('DATABASE_ERROR');\n                    observer.next(docs);\n                });\n            })\n        });\n    }\n\n    createOne(collectionName: string, data: [Object]) {\n        return new Observable(observer => {\n            if(!data['id']) data['id'] = uuid.v4();\n\n            console.log('createOne: ', data);\n            const collection = this.dbClient.db.collection(collectionName);\n\n            collection.insertOne(data, (err, docs) => {\n                if (err) observer.error('DATABASE_ERROR');\n                observer.next({id: data['id']});\n            });\n        })\n\n    }\n\n    update(collectionName: string, search: Object, set: Object) {\n        const collection = this.dbClient.db.collection(collectionName);\n        return new Observable(observer => {\n            console.log('update: ', set);\n            collection.updateMany(search, { $set: set }, (err, docs) => {\n                if (err) observer.error({ message: 'DATABASE_ERROR', error: err });\n                observer.next(docs.result);\n            });\n        });\n    }\n\n    delete(collectionName: string, search: Object) {\n        const collection = this.dbClient.db.collection(collectionName);\n        return new Observable(observer => {\n            console.log('DELETE ---->', collectionName, search);\n            collection.deleteMany(search, (err, docs) => {\n                if (err) observer.error('DATABASE_ERROR');\n                observer.next(docs);\n            });\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./server/common/crud.service.ts","const NodeMailer: any = require('nodemailer');\nimport { CRUDService } from './../common/crud.service';\nimport { Observable } from 'rxjs';\nconst nodemailer = require('nodemailer');\nimport * as fs from 'fs';\nrequire('dotenv').config()\n\nexport class EmailService {\n  private md: any;\n  private options: Object;\n  private emailInfo: string = '';\n  private emailForProblems: string = '';\n\n  constructor(\n    private CRUD: CRUDService,\n    private stagingServer,\n    private stagingClient\n  ) {}\n\n  sendVerificationLink(email, hash) {\n    return new Observable( observer => {\n\n        const fileContent = fs.readFileSync(\n          __dirname + '/../../public/mail/verification.html'\n        ).toString();\n\n        const html = fileContent\n        .replace(/{{LINK}}/g, `${this.stagingServer}/v1/auth/verify?hash=${hash}`)\n        .replace(/{{HOST}}/g, this.stagingServer)\n        .replace(/{{HOST_CLIENT}}/g, this.stagingClient);\n\n        this.sendEmailFunction(email, \"\", html).subscribe( res => observer.next(), err => observer.error(err));\n    })\n  }\n\n\n  sendPasswordRecoveryLink(user_email, passwordResetHash) {\n    return new Observable( observer => {\n\n          const fileContent = fs.readFileSync(\n            __dirname + '/../../public/mail/recovery-password.html'\n          ).toString();\n\n          const html = fileContent\n          .replace(/{{LINK}}/g, `${this.stagingClient}/reset?hash=${passwordResetHash}`)\n          .replace(/{{HOST}}/g, this.stagingServer)\n          .replace(/{{HOST_CLIENT}}/g, this.stagingClient);\n\n          this.sendEmailFunction(user_email, \"\", html).subscribe( res => observer.next(), err => observer.error(err));\n    });\n  }\n\n  sendEmailFunction(email, text, html) {\n    return new Observable( observer => {\n      nodemailer.createTestAccount((err, account) => {\n        // create reusable transporter object using the default SMTP transport\n        let transporter = nodemailer.createTransport({\n            host: '',\n            port: 465,\n            secure: true, // true for 465, false for other ports\n            auth: {\n                user: '', // generated ethereal user\n                pass: '' // generated ethereal password\n            }\n        });\n\n        // setup email data with unicode symbols\n        let mailOptions = {\n            from: '', // sender address\n            to: email, // list of receivers\n            subject: 'Verification', // Subject line\n            text: '', // plain text body\n            html: html // html body\n        };\n\n        // send mail with defined transport object\n        transporter.sendMail(mailOptions, (error, info) => {\n          if(error) {\n            observer.error(error);\n          }\n          observer.next(true);\n        });\n      });\n    });\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./server/common/email.service.ts","import * as EventEmitter from 'events';\nexport class GlobalService {\n    public app: any;\n    public static_folder: any;\n    public DBClient: any;\n    constructor() {\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./server/common/global.service.ts","import { APIResponse } from './../api/api.service';\nimport * as EventEmitter from 'events';\nvar expressJwt = require('express-jwt');\nimport * as uuid from 'uuid';\nimport * as jwt from 'jsonwebtoken';\n// export const secret: string = uuid.v4();\n//temp for dev\nexport const secret: string = '0f952eb0-5da5-45ad-8971-a9b15f9db6db';\n\nconst UNAUTHORIZED_PATHS: Array<string> = [\n    '/favicon.ico',\n    '/v1/auth/login',\n    '/v1/auth/register',\n    '/v1/auth/check-email',\n    '/v1/auth/set-password',\n    '/privacypolicy',\n    '/v1/auth/verify',\n    '/mail/recovery-password',\n    '/mail/verification',\n];\n\nexport class JWTService {\n    public app: any;\n    constructor() {\n\n    }\n\n  init(app) {\n    console.log('JwT initiated with secret: ' + secret);\n    app.use(expressJwt({ secret: secret }).unless({ path: UNAUTHORIZED_PATHS }));\n    this.handleError(app);\n  }\n\n    handleError(app) {\n        app.use(function (err, req, res, next) {\n            if (err.name === 'UnauthorizedError') {\n                let response: APIResponse = {\n                    status: false,\n                    error: 'UNAUTHORIZED'\n                };\n\n                res.status(401).send(response);\n            }\n        });\n    }\n\n    createToken(data) {\n        let token = jwt.sign(data, secret);\n        return token;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./server/common/jwt.service.ts","import { GlobalService } from './../common/global.service';\nimport { Observable } from 'rxjs';\nvar MongoClient = require('mongodb').MongoClient;\n\n//only for production\n//const url = '';\n// only for development\nconst url = 'mongodb://root:root@ds115436.mlab.com:15436/heroku_l8mlnz5x';\n// only for local dev\n //const url = 'mongodb://localhost:27017/bt';\n\nexport class DBClient {\n  public db: any;\n  constructor(\n    private globalService: GlobalService\n  ) {\n    this.db = this.globalService.DBClient;\n  }\n\n  connect() {\n    console.log('Connecting to db..');\n    return new Observable(observer => {\n      MongoClient.connect(url, (err, db) => {\n        if (!err) {\n          this.db = db;\n          console.log('Connected successfully to MongoDB server.');\n          observer.next();\n        } else {\n          console.log('Error connecting to server: ', err);\n          observer.error();\n        }\n      });\n    });\n  }\n\n  disconnect() {\n    this.db.close();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./server/db/db.client.ts","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 15\n// module chunks = 0","module.exports = require(\"cookie-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cookie-parser\"\n// module id = 16\n// module chunks = 0","module.exports = require(\"dotenv\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dotenv\"\n// module id = 17\n// module chunks = 0","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 18\n// module chunks = 0","module.exports = require(\"express-jwt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-jwt\"\n// module id = 19\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 20\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 21\n// module chunks = 0","module.exports = require(\"jsonwebtoken\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jsonwebtoken\"\n// module id = 22\n// module chunks = 0","module.exports = require(\"mongodb\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongodb\"\n// module id = 23\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 24\n// module chunks = 0"],"sourceRoot":""}